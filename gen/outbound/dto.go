package outbound

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"

	"github.com/AndreeJait/ntaps/internal/paths"
	"github.com/AndreeJait/ntaps/internal/util"
)

func ensureOutboundDTO(pkg, method string, withParam, withResp bool) error {
	path := filepath.Join(paths.OutboundRootPath, pkg, "dto.go")

	if _, err := os.Stat(path); os.IsNotExist(err) {
		if err := util.WriteGoFile(path, "package "+pkg+"\n\n"); err != nil {
			return err
		}
	}
	raw, err := os.ReadFile(path)
	if err != nil {
		return err
	}
	src := string(raw)

	if withParam && !strings.Contains(src, "type "+method+"Request struct") {
		src += fmt.Sprintf("\n// %sRequest generated by ntaps\ntype %sRequest struct {\n\t// TODO: define fields\n}\n", method, method)
	}
	if withResp && !strings.Contains(src, "type "+method+"Response struct") {
		src += fmt.Sprintf("\n// %sResponse generated by ntaps\ntype %sResponse struct {\n\t// TODO: define fields\n}\n", method, method)
	}

	return util.WriteGoFile(path, src)
}
