package repo

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"

	"github.com/AndreeJait/ntaps/internal/paths"
	"github.com/AndreeJait/ntaps/internal/util"
)

func ensureRepoDTO(pkg, method string, withParam, withResp bool) error {
	path := filepath.Join(paths.RepoPgPath, pkg, "dto.go")

	if _, err := os.Stat(path); os.IsNotExist(err) {
		if err := util.WriteGoFile(path, "package "+pkg+"\n\n"); err != nil {
			return err
		}
	}

	raw, err := os.ReadFile(path)
	if err != nil {
		return err
	}
	src := string(raw)

	if withParam && !strings.Contains(src, "type "+method+"Param struct") {
		src += fmt.Sprintf("\n// generated by ntaps\ntype %sParam struct {\n\t// TODO: define fields\n}\n", method)
	}
	if withResp && !strings.Contains(src, "type "+method+"Response struct") {
		src += fmt.Sprintf("\n// generated by ntaps\ntype %sResponse struct {\n\t// TODO: define fields\n}\n", method)
	}

	return util.WriteGoFile(path, src)
}
